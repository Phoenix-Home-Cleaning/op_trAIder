# ðŸš€ TRAIDER V1 - Backend Dockerfile
# Multi-stage build for FastAPI application with institutional-grade security
# 
# Build stages:
# 1. Base: Common Python setup with security hardening
# 2. Builder: Compile dependencies and build wheels
# 3. Runner: Production runtime environment
#
# Security features:
# - Non-root user execution
# - Minimal attack surface with distroless base
# - Dependency vulnerability scanning
# - Resource limits and health checks
# - Secrets management

# =============================================================================
# STAGE 1: BASE IMAGE WITH SECURITY HARDENING
# =============================================================================

FROM python:3.11-slim-bullseye AS base

# Set environment variables for Python optimization
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=100

# Install system dependencies and security updates
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        libpq-dev \
        gcc \
        g++ \
        pkg-config \
        libffi-dev \
        libssl-dev \
        postgresql-client \
        tini && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r traider && \
    useradd -r -g traider -u 1001 traider

# Set working directory
WORKDIR /app

# =============================================================================
# STAGE 2: DEPENDENCY BUILDER
# =============================================================================

FROM base AS builder

# Copy requirements first for better caching
COPY backend/requirements.txt .

# Create virtual environment and install dependencies
RUN python -m venv /opt/venv && \
    /opt/venv/bin/pip install --upgrade pip setuptools wheel && \
    /opt/venv/bin/pip install --no-cache-dir -r requirements.txt

# Compile Python files for faster startup
RUN /opt/venv/bin/python -m compileall /opt/venv/lib/python3.11/site-packages/

# =============================================================================
# STAGE 3: PRODUCTION RUNTIME
# =============================================================================

FROM python:3.11-slim-bullseye AS runner

# Set production environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONHASHSEED=random \
    PATH="/opt/venv/bin:$PATH" \
    PYTHONPATH="/app" \
    FASTAPI_ENV=production

# Install only runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        libpq5 \
        curl \
        tini && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r traider && \
    useradd -r -g traider -u 1001 traider

# Set working directory
WORKDIR /app

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Copy application code
COPY backend/ .

# Create necessary directories and set permissions
RUN mkdir -p /app/logs /app/data && \
    chown -R traider:traider /app

# Switch to non-root user
USER traider

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Use tini as init system for proper signal handling
ENTRYPOINT ["tini", "--"]

# Start the application with Gunicorn for production
CMD ["gunicorn", "main:app", \
     "--worker-class", "uvicorn.workers.UvicornWorker", \
     "--workers", "4", \
     "--bind", "0.0.0.0:8000", \
     "--timeout", "120", \
     "--keep-alive", "2", \
     "--max-requests", "1000", \
     "--max-requests-jitter", "100", \
     "--preload", \
     "--access-logfile", "-", \
     "--error-logfile", "-", \
     "--log-level", "info"]

# =============================================================================
# METADATA AND LABELS
# =============================================================================

LABEL maintainer="TRAIDER Team" \
      version="1.0.0-alpha" \
      description="TRAIDER V1 Backend - Institutional Trading Platform API" \
      org.opencontainers.image.title="TRAIDER Backend" \
      org.opencontainers.image.description="FastAPI backend for autonomous cryptocurrency trading" \
      org.opencontainers.image.version="1.0.0-alpha" \
      org.opencontainers.image.created="2025-01-27" \
      org.opencontainers.image.source="https://github.com/traider/traider-v1" \
      org.opencontainers.image.licenses="Proprietary" \
      security.scan="required" \
      performance.tier="high" \
      trading.component="api" 