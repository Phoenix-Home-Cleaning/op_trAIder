# 🔍 TRAIDER V1 - SonarQube Configuration
# Institutional-grade code quality analysis for autonomous trading platform
# 
# Performance: Analysis target <5min for full codebase scan
# Risk: CRITICAL - Code quality gates block production deployments
# Compliance: All quality metrics logged and retained (1 year)
#
# See: docs/infrastructure/sonarqube-setup.md
# Author: TRAIDER Team
# Since: 1.0.0-alpha

# =============================================================================
# PROJECT IDENTIFICATION
# =============================================================================

sonar.projectKey=Phoenix-Home-Cleaning_op_trAIder
sonar.projectName=TRAIDER V1 - Autonomous Trading Platform
sonar.projectVersion=1.0.0-alpha
sonar.organization=phoenix-home-cleaning

# Project description
sonar.projectDescription=Institutional-grade autonomous cryptocurrency trading platform with real-time market data, ML-driven signals, and risk management

# =============================================================================
# SOURCE CODE CONFIGURATION
# =============================================================================

# Source directories
sonar.sources=apps,middleware.ts,backend
sonar.tests=tests

# Include patterns
sonar.inclusions=**/*.ts,**/*.tsx,**/*.js,**/*.jsx,**/*.py

# Exclude patterns
sonar.exclusions=**/node_modules/**,**/*.d.ts,**/coverage/**,**/.next/**,**/dist/**,**/build/**,**/*.config.js,**/*.config.ts,**/public/**,**/docs/**,**/scripts/**

# Test exclusions
sonar.test.exclusions=**/node_modules/**,**/coverage/**,**/.next/**

# =============================================================================
# LANGUAGE-SPECIFIC CONFIGURATION
# =============================================================================

# TypeScript/JavaScript configuration
sonar.typescript.node=node
sonar.typescript.tsconfigPath=tsconfig.json
sonar.javascript.environments=browser,node,jest,vitest

# =============================================================================
# COVERAGE CONFIGURATION
# =============================================================================

# Coverage reports
sonar.javascript.lcov.reportPaths=coverage/lcov.info
sonar.typescript.lcov.reportPaths=coverage/lcov.info
sonar.python.coverage.reportPaths=coverage-fresh.json,coverage.xml
sonar.coverage.exclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.ts,**/*.spec.tsx,**/tests/**,**/*.d.ts,**/*.config.*,**/test_*.py

# =============================================================================
# QUALITY GATES - INSTITUTIONAL STANDARDS
# =============================================================================

# Coverage thresholds (institutional-grade)
sonar.coverage.minimum=80.0
sonar.coverage.critical=90.0

# Trading logic critical paths (must have ≥90% coverage)
sonar.coverage.trading.paths=**/trading/**,**/risk/**,**/signals/**,**/execution/**

# Duplication threshold
sonar.cpd.minimum=3.0

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Security hotspots
sonar.security.hotspots.reviewPriority=HIGH

# Vulnerability analysis
sonar.security.vulnerabilities.reportPaths=trivy-results.sarif,npm-audit.json

# =============================================================================
# MAINTAINABILITY CONFIGURATION
# =============================================================================

# Technical debt ratio
sonar.sqale.rating.a=0.05
sonar.sqale.rating.b=0.1
sonar.sqale.rating.c=0.2
sonar.sqale.rating.d=0.5

# Complexity thresholds
sonar.complexity.functions=10
sonar.complexity.file=15

# =============================================================================
# RELIABILITY CONFIGURATION
# =============================================================================

# Bug detection
sonar.reliability.rating.a=0
sonar.reliability.rating.b=0
sonar.reliability.rating.c=1
sonar.reliability.rating.d=2

# =============================================================================
# BRANCH ANALYSIS
# =============================================================================

# Main branch
sonar.branch.name=main

# Pull request analysis
sonar.pullrequest.provider=github
sonar.pullrequest.github.repository=Phoenix-Home-Cleaning/op_trAIder

# =============================================================================
# REPORTING CONFIGURATION
# =============================================================================

# Report formats
sonar.issuesReport.html.enable=true
sonar.issuesReport.json.enable=true

# Report paths
sonar.working.directory=.sonarqube

# =============================================================================
# INSTITUTIONAL COMPLIANCE
# =============================================================================

# Audit logging
sonar.log.level=INFO
sonar.log.jsonOutput=true

# Quality profiles
sonar.profile.js=Sonar way
sonar.profile.ts=Sonar way

# Custom rules for trading systems
sonar.rules.trading.enabled=true

# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================

# Analysis performance
# Note: -XX:MaxPermSize was removed after Java 7; use MaxMetaspaceSize for Java 8+
sonar.scanner.javaOpts=-Xmx2048m -XX:MaxMetaspaceSize=512m
sonar.analysis.mode=publish

# Parallel analysis
sonar.scanner.parallelism=4

# =============================================================================
# INTEGRATION CONFIGURATION
# =============================================================================

# GitHub integration
sonar.github.repository=Phoenix-Home-Cleaning/op_trAIder
sonar.github.oauth=true

# Webhook configuration
sonar.webhooks.project=https://api.github.com/repos/Phoenix-Home-Cleaning/op_trAIder/statuses

# =============================================================================
# CUSTOM METRICS FOR TRADING SYSTEMS
# =============================================================================

# Trading-specific quality metrics
sonar.custom.trading.metrics=true
sonar.custom.risk.validation=true
sonar.custom.latency.analysis=true

# Performance critical paths
sonar.performance.critical.paths=**/market-data/**,**/order-execution/**,**/risk-engine/**

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================

# Quality gate notifications
sonar.notifications.enabled=true
sonar.notifications.channels=slack,email

# Alert thresholds
sonar.alerts.coverage.threshold=80
sonar.alerts.duplications.threshold=3
sonar.alerts.complexity.threshold=15 