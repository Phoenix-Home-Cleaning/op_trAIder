from typing import Dict, Any, Optional
from fastapi import APIRouter, Depends
from fastapi.security import HTTPAuthorizationCredentials
from fastapi.responses import JSONResponse
from pydantic import BaseModel

router: APIRouter

class LoginRequest(BaseModel): ...
class LoginResponse(BaseModel): ...
class TokenValidationResponse(BaseModel): ...

async def login(login_request: LoginRequest) -> LoginResponse: ...
async def validate_token(current_user: Dict[str, Any] = Depends(...)) -> TokenValidationResponse: ...
async def logout(current_user: Dict[str, Any] = Depends(...)) -> JSONResponse: ...
async def get_me(current_user: Dict[str, Any] = Depends(...)) -> Dict[str, Any]: ...

def verify_password(plain_password: str, hashed_password: str) -> bool: ...

def get_password_hash(password: str) -> str: ...

def create_access_token(data: Dict[str, Any], expires_delta: Optional[Any] = ..., *, secret_key: Optional[str] = ..., algorithm: Optional[str] = ...) -> str: ...

def verify_token(token: str, *, secret_key: Optional[str] = ..., algorithms: Optional[list[str]] = ...) -> Dict[str, Any]: ... 