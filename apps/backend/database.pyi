from typing import AsyncGenerator, Any, Dict
from sqlalchemy.ext.asyncio import AsyncSession
import asyncpg

async def create_database_engine() -> Any: ...
async def create_connection_pool() -> asyncpg.Pool: ...
async def get_database_connection() -> None: ...
async def close_database_connection() -> None: ...
async def test_database_connectivity() -> None: ...

async def get_async_session() -> AsyncGenerator[AsyncSession, None]: ...
async def get_raw_connection() -> Any: ...
async def get_db_session() -> AsyncGenerator[AsyncSession, None]: ...
async def check_database_health() -> Dict[str, Any]: ...

# Re-export for ORM base
class Base: ... 