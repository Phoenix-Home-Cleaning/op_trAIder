---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: traider-dev
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'traider-backend'
        static_configs:
          - targets: ['backend-dev:8001']
        metrics_path: '/metrics'
        scrape_interval: 5s
      
      - job_name: 'postgres-exporter'
        static_configs:
          - targets: ['postgres-exporter:9187']
        scrape_interval: 10s
      
      - job_name: 'redis-exporter'
        static_configs:
          - targets: ['redis-exporter:9121']
        scrape_interval: 10s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-dev
  namespace: traider-dev
  labels:
    app: prometheus-dev
    component: monitoring
    environment: development
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: traider-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-dev
  template:
    metadata:
      labels:
        app: prometheus-dev
        component: monitoring
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.0
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          ports:
            - containerPort: 9090
              name: http
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus/'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=7d'
            - '--web.enable-lifecycle'
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-storage
              mountPath: /prometheus
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-dev
  namespace: traider-dev
  labels:
    app: prometheus-dev
    component: monitoring
    environment: development
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: traider-platform
spec:
  selector:
    app: prometheus-dev
  ports:
    - port: 9090
      targetPort: 9090
      name: http
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: traider-dev
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    
    [grafana_net]
    url = https://grafana.net
    
    [log]
    mode = console
    level = info
    
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
  
  datasources.yml: |
    apiVersion: 1
    
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-dev:9090
        isDefault: true
        editable: true
  
  dashboards.yml: |
    apiVersion: 1
    
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-dev
  namespace: traider-dev
  labels:
    app: grafana-dev
    component: monitoring
    environment: development
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: traider-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-dev
  template:
    metadata:
      labels:
        app: grafana-dev
        component: monitoring
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.0.0
          securityContext:
            runAsUser: 472
            runAsGroup: 472
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "REPLACE_WITH_GRAFANA_PASSWORD"
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
            - name: GF_INSTALL_PLUGINS
              value: "grafana-clock-panel,grafana-simple-json-datasource"
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: grafana-config
              mountPath: /etc/grafana
            - name: grafana-provisioning-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-provisioning-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-storage
              mountPath: /var/lib/grafana
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: grafana-config
          configMap:
            name: grafana-config
            items:
              - key: grafana.ini
                path: grafana.ini
        - name: grafana-provisioning-datasources
          configMap:
            name: grafana-config
            items:
              - key: datasources.yml
                path: datasources.yml
        - name: grafana-provisioning-dashboards
          configMap:
            name: grafana-config
            items:
              - key: dashboards.yml
                path: dashboards.yml
        - name: grafana-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-dev
  namespace: traider-dev
  labels:
    app: grafana-dev
    component: monitoring
    environment: development
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: traider-platform
spec:
  selector:
    app: grafana-dev
  ports:
    - port: 3000
      targetPort: 3000
      name: http
  type: ClusterIP 