---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: traider-dev
data:
  # Next.js Configuration
  NODE_ENV: "development"
  NEXT_PUBLIC_API_URL: "http://backend-dev:8000"
  
  # Authentication Configuration
  NEXTAUTH_URL: "http://localhost:3000"
  
  # Development Configuration
  NEXT_TELEMETRY_DISABLED: "1"
---
apiVersion: v1
kind: Secret
metadata:
  name: frontend-secrets
  namespace: traider-dev
type: Opaque
stringData:
  # NextAuth Secret
  NEXTAUTH_SECRET: "REPLACE_WITH_NEXTAUTH_SECRET"
  
  # Dashboard Password (for development)
  DASHBOARD_PASSWORD: "REPLACE_WITH_DASHBOARD_PASSWORD"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-dev
  namespace: traider-dev
  labels:
    app: frontend-dev
    component: frontend
    environment: development
    app.kubernetes.io/name: frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: traider-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-dev
  template:
    metadata:
      labels:
        app: frontend-dev
        component: frontend
    spec:
      containers:
        - name: frontend
          image: traider/frontend:dev
          ports:
            - containerPort: 3000
              name: http
          envFrom:
            - configMapRef:
                name: frontend-config
            - secretRef:
                name: frontend-secrets
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      initContainers:
        - name: wait-for-backend
          image: curlimages/curl:latest
          command: ['sh', '-c']
          args:
            - |
              until curl -f http://backend-dev:8000/health; do
                echo "Waiting for backend..."
                sleep 5
              done
              echo "Backend is ready!"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-dev
  namespace: traider-dev
  labels:
    app: frontend-dev
    component: frontend
spec:
  selector:
    app: frontend-dev
  ports:
    - port: 3000
      targetPort: 3000
      name: http
  type: ClusterIP 